Resumen

	En este documento, se expondrá el estado del arte actual del proceso de extracción de superficies de un conjunto de puntos en un dominio tridimensional, se describirán algunas técnicas actuales para tal propósito usando ejemplos, exponiendo los problemas e implicancias que estos presentan y cómo otras técnicas intentan resolver aquellos problemas.

Abstract

	In this Paper, will describe the state of art of the surface extraction process from a set of points in a three dimensional domain, it will describe some existing techniques for this purpose by using examples, showing the problems and implications they present and how other techniques try to solve those problems.

	Keywords: 3D Meshing, Polygonising, Scalar Field, 3D Contouring, Surface Reconstruction, Marching Cubes, Marching Squares, Marching Tetrahedrons

Glosario

	Vértice:
		Es el punto donde concurren las dos semirrectas que conforman un ángulo.

	Arista:
		Es, en geometría, el segmento de recta donde intersecan dos planos. Por extensión también se conoce con este nombre al segmento común que tienen dos caras vecinas de un poliedro.

	Poliedro:
		Un poliedro es, un cuerpo geométrico cuyas caras son planas y encierran un volumen finito. La palabra poliedro viene del griego clásico πολύεδρον (polyedron), de la raíz πολύς (polys), "muchas" y de έδρα (edra), "base", "asiento", "cara".

	Tetraedro:
		Un tetraedro es un poliedro de cuatro caras. Con este número de caras ha de ser un poliedro convexo, y sus caras triangulares, encontrándose tres de ellas en cada vértice. Si las cuatro caras del tetraedro son triángulos equiláteros, iguales entre sí, el tetraedro se denomina regular.

	Píxel:
		Un píxel (acrónimo del inglés picture element, "elemento de imagen") es la menor unidad homogénea en color que forma parte de una imagen digital.

	Voxel:
		El vóxel (del inglés volumetric pixel) es una unidad cúbica que compone un objeto tridimensional. Constituye la unidad mínima procesable de un espacio tridimensional y es, por tanto, el equivalente del píxel en un objeto 3D.


Indice

//puede ser dividido en indice de contenidos, de tablas y figuras

Introducción

	Mallas Geométricas

		Las mallas geométricas son una herramienta fundamental en la ciencia e ingienería, son un conjunto de polígonos (triángulos, cuadriláteros, tetraedros), que definen una superficie en un espacio definido, en el que la intersección de dos elementos de una malla, puede ser el conjunto vacío, un vértice, una arista o una cara en común. Las mallas tienen asociadas un conjunto de elementos topológicos tales como: Vértices, Aristas, y Caras poligonales.

		Regularmente, las mallas geompetricas se usan para describir, dependiendo su dimensión, una región en un plano, o un volumen en un espacio. Realizar esta discretización consiste en aproximar el dominio a simular dividiéndolo en elementos geométricos mas sencillos, comunmente triángulos, de tal manera que la intersección de dos elementos, sean un vértice, una arista, o el conjunto vacío.

		Existen casos triviales como la dicretizacion de un dominio rectangular, cuya solución es directa, dividiendo el dominio en un arreglo uniforme de triángulos, pero cuando se desea discretizar un elemento de geometría irregular, la solución no es tan trivial, y se necesita de un método de generación de mallas más elaborado.

		Sin embargo, para muchos problemas de ingienería, las mallas generadas por la triangulación de Delanuay, no son suficientes para resolver un problema o su análisis numérico, es posible en algunos casos que sea necesario agregar nuevos puntos con el fin de mejorar la calidd de la malla. A este proceso de mejoramiento, se le conoce como Refinamiento[[glosario]].

		En tres dimensiones, en particular, las mallas geometricas son una representación de un objeto físico, y para efectos de su visualización, los elementos internos de una malla pueden ser omitidos, y con ello, solo se utilizan mallas que describan la superficie del objeto.

	Usos de las Mallas Geométricas

		Las mallas geométricas tienen diferentes usos en la práctica, desde simulaciones fisicas tales como, estudio de fuerzas, interaccion de objetos, simulación de fluidos, etc. Tambien tienen usos gráficos, como para hacer visualizaciones de cuerpos en tres dimensiones, visualizacion de funciones matemáticas, e incluso usos artísticos como gráficos realistas, películas y videojuegos.

	Consideraciones Físicas

		En la realidad, vivimos inmersos en un mundo que podemos describirlo en tres dimensiones, y con ello, cualquier partícula (objetos, personas, etc.) tienen una posición especifica dentro de un sistema de referencia continuo, es decir, que no existe una distancia mínima para el desplazamiento.

		Por ejemplo, usando un aceramiento a la definicion de límites: si un objeto en un espacio continuo se desplaza una distancia $d$ positiva ($d > 0$), siempre existira una particula que pueda desplazarce una distancia menor, sin importar lo pequeña que sea $d$.

		Es esta continuidad del espacio del mundo real, lo que dificulta la tarea de representar cualquier objeto en una simulación virtual.

		En un espacio en tres dimensiones simulado computacionalmente, debido principalmente a los limites de memoria de los sistemas actuales, no pueden simular un espacio continuo, sino que todo elemento dentro de un espacio virtual debe estar inmerso en un espacio discreto, es decir, que existe una cantidad mínima para el desplazamiento.

		Los objetos en el mundo real estan compuestos de materia, la que está compuesta por átomos, la unión de ellos, crean objetos sólidos, con un nivel de detalle tan fino como atómico, debido a la continuidad del espacio real.

		Los objetos en un mundo virtual, no están (ni pueden aún), ser descritos por unidades atómicas, ya que supondría una cantidad enorme y muy costosa de memoria para almacenar cada átomo, y por ello, los objetos son representados por una cantidad discreta de triángulos que en conjunto forman una superficie la cual describe la forma visible del objeto representado.

		Debido a la no continuidad del espacio virtual, es que los objetos representados ahi, no son más que simples discretizaciones, [[burdas copias...]] de los objetos reales, y en consecuencia, sin las propiedades físicas que presentan los objetos reales, como la densidad, roce, etc.

		Por ejemplo, en el mundo real, podemos pulir una superficie de manera que sea perfectamente lisa y no presente roce, pero por muy lisa que parezca, debido a la continuidad, podemos acercarnos de manera infinita a la superficie y notar que en realidad, aún tiene imperfecciones que son mas pequeñas que lo minimo visible por el ojo humano, y con ello, eventualmente la superficie si presenta roce, por estas imperfecciones microscópicas. Sin embargo, al representar esta superficie en el mundo virtual, simplemente constaria de un plano perfecto en tres dimensiones, el cual, es perfectamente liso, y sin la cantidad infinita de detalles que presenta la superficie en la realidad.

	Objetos en tres dimensiones.

		Los objetos en tres dimensiones, como anteriormente se ejemplificó, son representados principalmente por planos triangulares que en conjunto forman una superficie que describe la forma externa y visible del objeto. El proceso completo para obtener un objeto en tres dimensiones, depende de la tecnologia usada y el propósito por el cual se genera un modelo en dos o tres dimensiones.

		Uno de los primeros algoritmos de generación de mallas, fue el propuesto por el matemático Ruso Boris Nikolaevich Delanuay. En honor a su autor, este algoritmo de triangulación se denomina como el "Algoritmo de Triangulacion de Delanuay", el cual a partir de una colección de puntos en un espacio, genera una malla geométrica formada por triángulos que sean lo más equiláteros posible.

		Para extraer la información de la forma de un cuerpo, existen tecnologías capaces de extraer la superficie de éstos, tales como software capaces de generar un modelo en tres dimensiones a partir de un arreglo de fotografias que rodean al objeto, también existe la tecnología de usar un arreglo de cámaras que capturan, en tiempo real, una nube de puntos infrarojos que son emitidos desde el aparato, y con ello, crear un modelo en tres dimensiones. En el ámbito médico, también existe tecnología para poder extraer información del interior del cuerpo humano, usando equipos de imagenología de resonancia magnética, la cual es una técnica no invasiva que utiliza el fenómeno de la resonancia magnética para obtener información de la estructura y composición del cuerpo a analizar, luego, la información obtenida es procesada a través de un software que genera la malla geométrica del área de interés por el científico.

Estado del Arte

	En el caso de las imágenes obtenidas por resonancia magnética, lo que se obtiene son un arreglo de imágenes de distintos niveles en un mismo eje geométrico de un cuerpo. Luego, para generar una malla geométrica del cuerpo existen diversas técnicas, muchas de ellas basadas en voxels como por ejemplo, Marching Cubes y Marching Tetrahedrons.

	En esta investigación se dará especial énfasis en el algoritmo de Marching Cubes, se explicará su funcionamiento, resultados y problemas que actualmente presenta.

	Para entender mejor cómo funciona Marching Cubes, es de utilidad primero ver el caso reducido a dos dimensiones, el que puede ser llamado como "Marching Squares".

	Marching Squares.

		En dos dimensiones para obtener el contorno de una figura, se puede usar este algoritmo que se basa en crear divisiones cuadrilaterales uniformes del espacio, y en cada una de ellas dibujar un patron específico del caso que encierra esa división, finalmente todas las divisiones tienen dibujadas un patron específico o un espacio vacío, obteniendo asi el contorno de la imagen tratada.

		El siguiente caso, ejemplifica el proceso completo.

			Ejemplo
			[[fuente][http://www.cs.carleton.edu/cs_comps/0405/shape/marching_cubes.html]]

				Se supone la siguiente imagen a tratar para obtener su contorno.
				[[marchingsquare/orig.jpg]]

				Luego se divide el espacio en un arreglo uniforme de cuadriláteros, en este caso una matriz de 7x8 celdas.
				[[marchingsquare/orig.jpg]]

				Luego para poder obtener el patron a dibujar en cada celda, se hace un proceso de reconocimiento, en un principio es necesario, etiquetar cada vértice de cada celda dependiendo si están dento o fuera de la region de interés. Esto puede ser calculado de distintas formas que dependen intrínsicamente del problema, en este caso, basta con detectar si el vértice está sobre un pixel blanco o no, en otros casos, puede depender de que si el valor del pixel en escala de grises supera (o es inferior) a un valor fijo determinado por el científico.

				A continuación muestra como quedan etiquetados los vértices, dependiendo si estan dentro de la figura (en rojo), o si están fuera de la figura (en azul)
				[[marchingsquare/labeledobj.jpg]]

				Si ahora se analiza celda a celda, se ve que existen dieciséis combinaciones distintas de vértices etiquetados como dentro o fuera de la region en una misma celda, como muestra la siguiente imagen.
				[[marchingsquare/cases.gif]]

				Además se entiende que si uno de los lados de una celda (una arista) esta formada por un vértice marcado como dentro y otro fuera, significa que por esa arista corta el borde de la figura, y por lo tanto, esa arista la dejamos marcada como una arista de contorno detectada, que en este ejemplo se marca de color morado.
				[[marchingsquare/purpledobj.jpg]]

				Luego por cada celda, se unen los puntos morados formados en el paso anterior, creando así uno de los dieciséis patrones posibles, lo cual se puede entender como una de las 8 formas en que un cuadrilátero puede ser atravesado por una linea, formando asi el contorno buscado como muestra la siguiente imagen.
				[[marchingsquare/purpledobj.jpg]]

				Posteriormente, dependiendo de los requerimientos de la investigación, se puede mejorar la aproximación haciendo una interpolación lineal de los valores de los vértices para calcular en que punto aproximadamente la figura (a la que se quiere extraer su contorno), corta con la arista, un ejemplo del resultado de esta aproximación se muestra en la siguiente imagen.
				[[marchingsquare/2Dintersected.jpg]]

	Consecuencias

				Evidentemente existen ciertas falencias, por ejemplo, el contorno obtenido no simula adecuadamente el objeto estudiado, debido a errores causados por la fragmentacion de las divisiones iniciales, una solución directa para mejorar esto es aumentar las divisiones, es decir, hacer que todas las celdas sean mas pequeñas, y asi hacer una mejor aproximación del contorno del objeto en estudio. De la misma Manera, existen otras técnicas como hacer particiones con celdas de tamaño variable en las particiones, o subdividir aquellas celdas que hayan sido detectadas como de frontera y asi obtener un mejor desempeño en el algoritmo.

				Otro problema es que algunos casos presentan ambigüedad, es decir, no es trivial calcular a cual caso pertenece una cierta configuracion, por ejemplo, tomando el quinto y décimo caso descritos anteriormente, se supone el siguiente ejemplo:
				[[marchingsquare/marchingSAmbEx.gif]]

				Este cuadrado, tiene dos vértices diagonalmente opuestos marcados. Sin conocer como es la figura ni cómo son las divisiones vecinas, no se puede saber con exactitud si se trata del quinto o el décimo caso, por lo que el algoritmo puede erróneamente separar el contorno formando asi dos figuras separadas, o las une, de manera que sólo exista una figura con un contorno compartido.


	Marching Cubes

		Idea

			Marching Cubes es un algoritmo de extracción de una superficie poligonal de un cuerpo en un espacio escalar en tres dimensiones. Existen muchas aplicaciones para este tipo de técnicas, dos de las más comunes son:

				* Reconstruccion de una superficie a partir de un set de imágenes médicas, como por ejemplo los obtenidos en imágenes de resonancia magnética, los que pueden formar un volumen en tres dimensiones.

				* Crear un contorno tridimensional de un campo escalar matemático, en este caso el valor de una cierta función es conocido en todo el espacio, pero es representada como vértices de una malla tridimensional.

			Adopta la misma idea que hay detrás de Marching Squares, pero llevando los conceptos a tres dimensiones, en este caso, el dominio es un espacio tridimensional, en el cual existe un cuerpo al que se desea extraer su superficie. Luego, el espacio es dividido en regiones uniformes (cubos), por los cuales la superficie del objeto corta las aristas de estos cubos.

		Consideraciones Geométricas

			Un cubo tiene seis caras, ocho vértices y doce aristas, las cuales, para efectos de esta investigación serán numeradas de la siguiente manera:
			[[marchingsquare/convention.gif]]

			De la misma manera que el caso de dos dimensiones, debido a que cada uno de los ocho vértices puede tener dos estados, vétice marcado como interno o externo (dentro o fuera de la superficie del cuerpo), se tienen 256 combinaciones posibles, es decir, una superficie puede atravesar a un cubo de 256 maneras posibles. Sin embargo, al igual que en su homólogo en dos dimensiones, que tiene dieciséis formas posibles, estas pueden ser reducidas a un numero inferior de patrones, ya que entre ellos existen diferencias sólamente de rotación y reflexión.

			En el caso de tres dimensiones, los 256 patrones pueden ser reducidos de la misma manera, en efecto, dos de esos casos son triviales, ya que tienen todos sus vértices marcados como internos o externos, por lo tanto, ambos casos no contribuyen a la superficie que se quiere extraer.

			Si se consideran las simetrías, hay solamente catorce posibles configuraciones únicas en los restantes 254 casos. Por ejemplo, aquellos casos que solamente tienen un vértice marcado como interno, sólo representan un triángulo que atraviesa las aristas que convergen a ése vértice y existen ocho casos como éste, uno por cada vértice del cubo.

			Finalmente las quince familias de posibles casos son los que se describen en la siguiente imagen.
			[[marchingsquare/MarchingCubes.svg]]

		Procedimiento

			El procedimiento es similar al explicado a Marching Squares, en primer lugar se divide el espacio en un arreglo uniforme de regiones cúbicas, luego, se evalúa cada vértice para etiquetarlo como un vértice interno o externo, luego, calcular a cuál de los 15 casos pertenece y generar los triángulos, para que, finalmente, extraer así la superficie.

			En resumen, el procedimiento reducido a un solo cubo, ocurre según lo siguiente, en un comienzo se tiene un cubo.
			[[marchingsquare/cube_01.png]]

			Suponiendo que este cubo tiene sólamente un vértice que quedó dentro del cuerpo, éste vértice queda marcado como un vértice interno, los siete restantes quedan marcados como vértices externos.
			[[marchingsquare/cube_02.png]]

			Luego se crea un triángulo cuyos vértices se apoyan en los puntos medios de las aristas que comparten el vértice marcado como interno, de esta manera, se tiene un cubo que es atravesado por una superficie que precisamente deja un sólo vértice dentro (o fuera, dependiendo de la reflexión del caso)
			[[marchingsquare/cube_03.png]]

		Consecuencias

			Nuevamente, de la misma manera que su versión en dos dimensiones, presenta las mismas falencias, por ejemplo, sin ninguna interpolación, y dependiendo de la resolucion de la división, la superficie extraída puede presentar un efecto de escalonamiento (aliasing) como el que se muestra en las siguientes imagenes.

			La forma original:
			[[marchingsquare/mc_blobs.gif]]

			Usando Marching Cubes con 12 divisiones:
			[[marchingsquare/mc_blobs_12.gif]]

			Usando Marching Cubes con 20 divisiones:
			[[marchingsquare/mc_blobs_20.gif]]

			Usando Marching Cubes con 50 divisiones:
			[[marchingsquare/mc_blobs_50.gif]]

			Se puede apreciar que al aumentar la resolución, la calidad aumenta, pero computacionalmente requiere mas cómputo y memoria, ya que aumentan la cantidad de caras que describen la superficie extraída, como se ve en la siguiente imagen.
			[[marchingsquare/polygonise3.gif]]

			Otro problema importante son los posibles problemas topológicos que tiene este algoritmo, debido a los casos ambiguos que se explican de la misma manera que en su versión en dos dimensiones, y algunos casos donde se forman agujeros dependiendo de que ciertos casos queden adyacentes.

			Por ejemplo, si se juntan los siguientes casos, pueden generar agujeros en el modelo final en 3 dimensiones.
			[[marchingsquare/MCAmbEx.gif]]

			Para poder evitar estos errores, se introducen seis nuevas familias de casos:
			[[marchingsquare/MCAmb.gif]]

			En el ejemplo anterior, en vez de usar el patron etiquetado como 6e, debería usarse el 6c de la figura anterior, solucionando asi el potencial error topológico.

			Otra posible solución, es usar pirámides o tetraedros (Marching Tetrahedrons), los cuales son más sencillas de utilizar ya que sólo existen 16 posibles combinaciones totales (al igual que marching squares, ya que en ambos casos, los elementos tienen cuatro vértices), los cuales pueden ser reducidos a sólo cuatro, la poligonización tetrahédrica se muestra a continuación.
			[[marchingtetrahedrons/image_004.gif]]

			De hecho, en el caso de Marching Cubes, cada cubo puede al final, descomponerse en 5 pirámides o tetrahedros como se muestra en la siguiente imagen:
			[[marchingtetrahedrons/image_006.gif]]

Conclusiones

	Las mallas geométricas son una gran herramienta dentro de la ciencia e ingienería, sus aplicaciones son muchas, y en general se usan para representar un objeto o cuerpo de manera discretizadamente.

	Por esto y a las implicaciones físicas es que no se puede hacer un estudio infinitesimal de los cuerpos en tres dimensiones y es necesario crear modelos discretizados de ellos, para facilitar el trabajo con estos.

	Para los fines de visualización existen diversas técnicas basadas en elementos finitos como Marching Squares, Marching Cubes y Marching Tetrahedrons, los cuales, dependiendo de su dimensión y objetivos, son capaces de extraer de manera discretizada el contorno o superficie de un cuerpo en estudio, para finalmente poder trabajar con él.

	No obstante, estos métodos presentan problemas causados por la discretización misma que genera malas aproximaciones y para mejorarlas requieren de mayor poder de cómputo, o también presentan problemas topológicos causando errores de cálculo importantes. Aún asi, hasta la fecha se han investigado y aún se pueden crear nuevas técnicas para poder enfrentar estas situaciones, y generar mallas cada vez de mayor calidad.

Objetivos

En esta investigación, se estudiarán las distintas técnicas que se han expuesto en el estado del arte, se comprobarán los problemas topológicos que traen y se estudiarán las mejoras que actualmente se han implementado durante la existencia de estos algoritmos, para que finalmente, se pueda proponer un flujo de trabajo que permita, a partir de una nube de puntos, poder extraer una superficie del volumen de alta calidad.

Referencias

	W.Lorensen, H.Cline
	Marching Cubes: A High Resolution 3D Surface Construction Algorithm
	Computer Graphics, 21 (4): 163-169, July 1987

	http://paulbourke.net/geometry/polygonise/

	http://ldc.usb.ve/~vtheok/cursos/ci5322/marching/marching.html

	http://www.exaflop.org/docs/marchcubes/

	http://www.cs.carleton.edu/cs_comps/0405/shape/marching_cubes.html

	http://cns.bu.edu/~lavanya/Graphics/cs580/p5/web-page/p5.html

	http://paulbourke.net/geometry/polygonise/
